// first loop

/**
 * Document: MaxCompiler tutorial (maxcompiler-tutorial.pdf)
 * Chapter: 4      Example: 2      Name: Simple
 * MaxFile name: Simple
 * Summary:
 * 	 Takes a stream and for each value x calculates x^2 + x.
 */
package simple;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
/*  for exp() function  */
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;

class SimpleKernel extends Kernel {
	SimpleKernel(KernelParameters parameters) {
		super(parameters);

        DFEVar H = constant.var(dfeFloat(8,24),0.4);
		// Input
		DFEVar i = io.input("x", dfeFloat(8, 24));
        DFEVar temp = powSq((2.0 * i - 1.0) * H);
        temp = temp * -1;
        DFEVar result = KernelMath.exp(temp);

		// Output
		io.output("y", result, dfeFloat(8, 24));
	}

	static DFEVar powSq(DFEVar x) {
		return x*x;
	}
}

